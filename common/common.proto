syntax = "proto3";

package topcoder.common;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

enum Operator {
  OPERATOR_UNSPECIFIED = 0;
  OPERATOR_EQUAL = 1;
  OPERATOR_NOT_EQUAL = 2;
  OPERATOR_GREATER_THAN = 3;
  OPERATOR_GREATER_THAN_OR_EQUAL = 4;
  OPERATOR_LESS_THAN = 5;
  OPERATOR_LESS_THAN_OR_EQUAL = 6;
  OPERATOR_AND = 7;
  OPERATOR_BETWEEN = 8;
  OPERATOR_IN = 9;
  OPERATOR_IS = 10;
  OPERATOR_NOT = 11;
  OPERATOR_OR = 12;
}

enum Domain {
  DOMAIN_UNSPECIFIED = 0;
  DOMAIN_RESOURCE = 1;
  DOMAIN_RESOURCE_ROLE = 2;
  DOMAIN_RESOURCE_ROLE_PHASE_DEPENDENCY = 3;
  DOMAIN_CHALLENGE = 4;
  DOMAIN_CHALLENGE_TYPE = 5;
  DOMAIN_CHALLENG_TIMELINE_TEMPLATE = 6;
  DOMAIN_CHALLENGE_TRACK = 7;
  DOMAIN_CHALLENGE_PHASE = 8;
  DOMAIN_CHALLENGE_TIMELINE_TEMPLATE = 9;
  DOMAIN_SUBMISSION = 10;
}

message ScanCriteria {
  string key = 1;
  optional Operator operator = 2;
  google.protobuf.Value value = 3;
}

message ScanRequest {
  repeated ScanCriteria criteria = 1;
  optional string next_token = 2;
}

message ScanResult {
  optional string next_token = 1;
  repeated google.protobuf.Struct items = 2;
}

message CreateResult {
  oneof kind {
    int64 integer_id = 1;
    string string_id = 2;
  }
}

message UpdateResult {
  int64 updated_count = 1;
  optional string message = 2;
}

message CheckExistsResult {
  bool exists = 1;
}

message LookupCriteria {
  string key = 1;
  google.protobuf.Value value = 3;
}

// TODO: There has to be a better way to do this.
message GoogleProtobufTypesPlaceholder {
  google.protobuf.Timestamp timestamp = 1;
  google.protobuf.Empty empty = 2;
}

// This is a necessary indirection (challenge-api -> domain-challenge -> acl)
// When we have a proper review API in place, these requests can go to
// review-api or domain-review directly.

enum PhaseFact {
  PHASE_FACT_UNSPECIFIED = 0;
  PHASE_FACT_REGISTRATION = 1;
  PHASE_FACT_SUBMISSION = 2;
  PHASE_FACT_REVIEW = 3;
  PHASE_FACT_ITERATIVE_REVIEW = 4;
  PHASE_FACT_CHECKPOINT_SUBMISSION = 5;
  PHASE_FACT_CHECKPOINT_SCREENING = 6;
  PHASE_FACT_CHECKPOINT_REVIEW = 7;
  PHASE_FACT_CHECKPOINT_ITERATIVE_REVIEW = 8;
  PHASE_FACT_FINAL_FIX = 9;
  PHASE_FACT_FINAL_REVIEW = 10;
  PHASE_FACT_APPEALS = 11;
  PHASE_FACT_APPEALS_RESPONSE = 12;
}

message PhaseFactRequest {
  int32 legacy_id = 1;
  repeated topcoder.common.PhaseFact facts = 2;
}

message PhaseFactResponse {
  message FactResponse {
    topcoder.common.PhaseFact fact = 1;
    google.protobuf.Value response = 2;
  }
  repeated FactResponse fact_responses = 1;
}