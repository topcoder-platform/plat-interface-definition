syntax = "proto3";

package topcoder.domain.challenge;

import "common/common.proto";
import "google/protobuf/timestamp.proto";

message Challenge {
  string id = 1;
  optional int32 legacy_id = 2;
  string name = 3;
  string type_id = 4;
  string track_id = 5;
  optional Legacy legacy = 6;
  optional Billing billing = 7;
  string description = 8;
  optional string private_description = 9;
  optional string description_format = 10;
  repeated Metadata metadata = 11;
  optional Task task = 12;
  optional string timeline_template_id = 13;
  repeated Phase phases = 14;
  repeated Event events = 15;
  repeated Term terms = 16;
  repeated PrizeSet prize_sets = 17;
  repeated string tags = 18;
  optional int32 project_id = 19;
  optional string start_date = 20;
  optional string end_date = 21;
  string status = 22;
  repeated string attachments = 23;
  repeated string groups = 24;
  repeated Winner winners = 25;
  repeated Payment payments = 26;
  repeated Discussion discussions = 27;
  string created_by = 28;
  optional string updated_by = 29;
  int64 created = 30;
  optional int64 updated = 31;
  Overview overview = 32;
  optional Constraint constraints = 33;
  repeated Skill skills = 34;

  message Legacy {
    optional string track = 1;  // Develop, Design, Data Science, QA
    optional string sub_track = 2;
    optional int32 forum_id = 3;
    int32 direct_project_id = 4;
    string review_type = 5;           // COMMUNITY, INTERNAL
    string confidentiality_type = 6;  // public, private
    optional int32 review_scorecard_id = 7;
    optional int32 screening_scorecard_id = 8;
    optional bool pure_v5_task = 9;
    optional bool self_service = 10;
    optional string self_service_copilot = 11;
  }

  message Billing {
    int32 billing_account_id = 1;
    double markup = 2;
    optional double client_billing_rate = 3;
  }

  message Event {
    optional int32 id = 1;
    string name = 2;
    string key = 3;
  }

  message Term {
    string id = 1;
    string role_id = 2;
  }

  message Metadata {
    string name = 1;
    string value = 2;
  }

  message Discussion {
    optional string id = 1;
    string name = 2;
    string type = 3;  // challenge
    string provider = 4;
    optional string url = 5;
  }

  message Phase {
    int64 duration = 1;
    optional google.protobuf.Timestamp scheduled_start_date = 2;
    optional google.protobuf.Timestamp scheduled_end_date = 3;
    optional google.protobuf.Timestamp actual_start_date = 4;
    optional google.protobuf.Timestamp actual_end_date = 5;
    string name = 6;
    string phase_id = 7;
    string id = 8;
    bool is_open = 9;
    repeated Constraint constraints = 10;
    optional string description = 11;
    optional string predecessor = 12;

    message Constraint {
      string name = 1;
      int32 value = 2;
    }
  }

  message Payment {
    string handle = 1;
    double amount = 2;
    int32 user_id = 3;
    string type = 4;
  }

  message Winner {
    string handle = 1;
    int32 placement = 2;
    int32 user_id = 3;
    optional string type = 4;
  }

  message Task {
    bool is_task = 1;
    bool is_assigned = 2;
    optional int32 member_id = 3;
  }

  message PrizeSet {
    message Prize {
      optional int64 amount_in_cents = 1;
      optional float value = 2;
      string type = 3;
    }

    string type = 1;  // Placement, Copilot, Reviewer
    optional string description = 2;
    repeated Prize prizes = 3;
  }

  message Overview {
    optional int64 total_prizes_in_cents = 1;
    optional float total_prizes = 2;
  }

  message Constraint {
    repeated string allowed_registrants = 1;
  }

  message Skill {
    message SkillCategory {
      string name = 1;
      string id = 2;
    }
    string name = 1;
    string id = 2;
    SkillCategory category = 3;
  }
}

message ChallengeList {
  repeated Challenge items = 1;
}

message CreateChallengeInput {
  string name = 1;
  string type_id = 2;
  string track_id = 3;
  optional string timeline_template_id = 4;
  Challenge.Legacy legacy = 5;
  Challenge.Billing billing = 6;
  optional string description = 7;
  optional string private_description = 8;
  optional string description_format = 9;
  repeated Challenge.Metadata metadata = 10;
  optional Challenge.Task task = 11;
  repeated Challenge.Phase phases = 12;
  repeated Challenge.Event events = 13;
  repeated Challenge.Term terms = 14;
  repeated Challenge.PrizeSet prize_sets = 15;
  repeated string tags = 16;
  repeated Challenge.Skill skills = 17;
  optional int32 project_id = 18;
  optional string start_date = 19;
  optional string end_date = 20;
  string status = 21;
  repeated string attachments = 22;
  repeated string groups = 23;
  repeated Challenge.Discussion discussions = 24;
  optional Challenge.Constraint constraints = 25;
}

message UpdateChallengeInput {
  message UpdateInput {
    optional string name = 1;
    optional string type_id = 2;
    optional string track_id = 3;
    optional string timeline_template_id = 4;
    optional Challenge.Legacy legacy = 5;
    optional Challenge.Billing billing = 6;
    optional string description = 7;
    optional string private_description = 8;
    optional string description_format = 9;
    optional Challenge.Task task = 10;

    optional WinnerUpdate winner_update = 11;
    optional DiscussionUpdate discussion_update = 12;
    optional MetadataUpdate metadata_update = 13;
    optional PhaseUpdate phase_update = 14;
    optional EventUpdate event_update = 15;
    optional TermUpdate term_update = 16;
    optional PrizeSetUpdate prize_set_update = 17;
    optional TagsUpdate tag_update = 18;
    optional AttachmentsUpdate attachment_update = 19;
    optional GroupsUpdate group_update = 20;

    optional int32 project_id = 21;
    optional string start_date = 22;
    optional string end_date = 23;
    optional string status = 24;
    optional Challenge.Overview overview = 25;
    optional Challenge.Constraint constraints = 26;
    optional PaymentUpdate payment_update = 27;
    optional SkillUpdate skill_update = 28;

    message WinnerUpdate {
      repeated Challenge.Winner winners = 1;
    }
    message PaymentUpdate {
      repeated Challenge.Payment payments = 1;
    }
    message DiscussionUpdate {
      repeated Challenge.Discussion discussions = 1;
    }
    message MetadataUpdate {
      repeated Challenge.Metadata metadata = 1;
    }
    message PhaseUpdate {
      repeated Challenge.Phase phases = 1;
    }
    message EventUpdate {
      repeated Challenge.Event events = 1;
    }
    message TermUpdate {
      repeated Challenge.Term terms = 1;
    }
    message PrizeSetUpdate {
      repeated Challenge.PrizeSet prize_sets = 1;
    }
    message TagsUpdate {
      repeated string tags = 1;
    }
    message AttachmentsUpdate {
      repeated string attachments = 1;
    }
    message GroupsUpdate {
      repeated string groups = 1;
    }
    message SkillUpdate {
      repeated Challenge.Skill skills = 1;
    }
  }

  repeated topcoder.common.ScanCriteria filter_criteria = 1;
  UpdateInput update_input = 2;
}

message UpdateChallengeInputForACL {
  message UpdateInputForACL {
    optional string status = 1;
    optional PhasesACL phases = 2;
    optional Challenge.Phase current_phase = 3;
    optional CurrentPhaseNamesACL current_phase_names = 4;
    optional google.protobuf.Timestamp registration_start_date = 5;
    optional google.protobuf.Timestamp registration_end_date = 6;
    optional google.protobuf.Timestamp submission_start_date = 7;
    optional google.protobuf.Timestamp submission_end_date = 8;
    optional google.protobuf.Timestamp start_date = 9;
    optional google.protobuf.Timestamp end_date = 10;
    optional LegacyACL legacy = 11;
    optional PrizeSetsACL prize_sets = 12;
    optional Challenge.Overview overview = 13;
    optional WinnersACL winners = 14;
    optional string phase_to_close = 15;
    optional PaymentsACL payments = 16;
  }
  message PhasesACL {
    repeated Challenge.Phase phases = 1;
  }
  message CurrentPhaseNamesACL {
    repeated string current_phase_names = 1;
  }
  message LegacyACL {
    optional int32 review_scorecard_id = 1;
    optional int32 screening_scorecard_id = 2;
  }
  message PrizeSetsACL {
    repeated Challenge.PrizeSet prize_sets = 1;
  }
  message WinnersACL {
    repeated WinnerACL winners = 1;
  }
  message WinnerACL {
    string handle = 1;
    int32 placement = 2;
    int32 user_id = 3;
  }
  message PaymentsACL {
    repeated PaymentACL payments = 1;
  }
  message PaymentACL {
    string handle = 1;
    double amount = 2;
    int32 user_id = 3;
    string type = 4;
  }
  repeated topcoder.common.ScanCriteria filter_criteria = 1;
  UpdateInputForACL update_input_for_acl = 2;
}
